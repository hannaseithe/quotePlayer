@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();



$my-dark-theme-background: (
  status-bar: green,
  app-bar:    map_get($mat-blue, 900),
  background: orange,
  hover:      rgba(white, 0.04), 
  card:       map_get($mat-red, 800),
  dialog:     map_get($mat-grey, 800),
  disabled-button: $white-12-opacity,
  raised-button: map-get($mat-grey, 800),
  focused-button: $white-6-opacity,
  selected-button: map_get($mat-grey, 900),
  selected-disabled-button: map_get($mat-grey, 800),
  disabled-button-toggle: black,
  unselected-chip: map_get($mat-grey, 700),
  disabled-list-option: black,
);

$my-dark-theme-foreground: (
  base:              yellow,
  divider:           $white-12-opacity,
  dividers:          $white-12-opacity,
  disabled:          rgba(white, 0.3),
  disabled-button:   rgba(white, 0.3),
  disabled-text:     rgba(white, 0.3),
  hint-text:         rgba(white, 0.3),
  secondary-text:    rgba(white, 0.7),
  icon:              white,
  icons:             white,
  text:              yellow,
  slider-min:        white,
  slider-off:        rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);

@function create-smooth-background($primary, $accent) {
    @return (
        status-bar: map_get($mat-grey, 300),
        app-bar:    map_get($mat-grey, 100),
        background: map_get($primary,200),
        hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX
        card:       map_get($primary,50),
        dialog:     map_get($primary,100),
        disabled-button: rgba(map_get($primary,900), 0.12),
        raised-button: white,
        focused-button: $dark-focused,
        selected-button: map_get($mat-grey, 300),
        selected-disabled-button: map_get($mat-grey, 400),
        disabled-button-toggle: map_get($mat-grey, 200),
        unselected-chip: map_get($mat-grey, 300),
        disabled-list-option: map_get($mat-grey, 200),
    );
  }

// instead of creating a theme with mat-light-theme like a sane person, we will create our own theme-creating function that lets us apply our own foreground and background palettes.
@function create-smooth-theme($primary, $accent, $warn) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: false,
    foreground: $mat-light-theme-foreground,
    background: create-smooth-background($primary, $accent),
  );
}
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-indigo);
$candy-app-accent:  mat-palette($mat-lime, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

$candy-app-foreground: mat-palette($mat-deep-orange);
$candy-app-background: mat-palette($mat-cyan);


// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: create-wonky-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);